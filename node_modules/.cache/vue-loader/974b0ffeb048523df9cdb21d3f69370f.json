{"remainingRequest":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/moritzmurauer/dev/ap/abschluss-pruefung/src/views/posts/CreatePost.vue?vue&type=template&id=3f8e7fb2","dependencies":[{"path":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/src/views/posts/CreatePost.vue","mtime":1616438638027},{"path":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdj4KICAgIDxmb3JtIEBzdWJtaXQucHJldmVudD0iaGFuZGxlU3VibWl0Ij4KICAgICAgPGg0PkNyZWF0ZSBhIE5ldyBQb3N0PC9oND4KICAgICAgPGlucHV0IHR5cGU9InRleHQiIHJlcXVpcmVkIHBsYWNlaG9sZGVyPSJQbGF5bGlzdCB0aXRsZSIgdi1tb2RlbD0idGl0bGUiPgogICAgICA8dGV4dGFyZWEgcmVxdWlyZWQgcGxhY2Vob2xkZXI9IlBsYXlsaXN0IGRlc2NyaXB0aW9uLi4uIiB2LW1vZGVsPSJkZXNjcmlwdGlvbiI+PC90ZXh0YXJlYT4KICAgICAgPCEtLSB1cGxvYWQgcGxheWxpc3QgaW1hZ2UgLS0+CiAgICAgIDxsYWJlbD5VcGxvYWQgUG9zdCBDb3ZlciBJbWFnZTwvbGFiZWw+CiAgICAgIDxpbnB1dCB0eXBlPSJmaWxlIiBAY2hhbmdlPSJoYW5kbGVDaGFuZ2UiPgogICAgICA8ZGl2IGNsYXNzPSJlcnJvciI+e3sgZmlsZUVycm9yIH19PC9kaXY+CgogICAgICA8YnV0dG9uIHYtaWY9IiFpc1BlbmRpbmciPkNyZWF0ZTwvYnV0dG9uPgogICAgICA8YnV0dG9uIHYtZWxzZSBkaXNhYmxlZD5TYXZpbmcuLi48L2J1dHRvbj4KICAgIDwvZm9ybT4KICA8L2Rpdj4K"},{"version":3,"sources":["/Users/moritzmurauer/dev/ap/abschluss-pruefung/src/views/posts/CreatePost.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC;IACF,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACzB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACzF,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACzC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACR,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/src/views/posts/CreatePost.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <form @submit.prevent=\"handleSubmit\">\n      <h4>Create a New Post</h4>\n      <input type=\"text\" required placeholder=\"Playlist title\" v-model=\"title\">\n      <textarea required placeholder=\"Playlist description...\" v-model=\"description\"></textarea>\n      <!-- upload playlist image -->\n      <label>Upload Post Cover Image</label>\n      <input type=\"file\" @change=\"handleChange\">\n      <div class=\"error\">{{ fileError }}</div>\n\n      <button v-if=\"!isPending\">Create</button>\n      <button v-else disabled>Saving...</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport useStorage from '@/composables/useStorage'\nimport useCollection from '@/composables/useCollection'\nimport getUser from '@/composables/getUser'\nimport { timestamp } from '@/firebase/config'\nimport { useRouter } from 'vue-router'\n\nexport default {\n  setup() {\n    const { filePath, url, uploadImage } = useStorage()\n    const { error, addDoc } = useCollection('posts')\n    const { user } = getUser()\n    const router = useRouter()\n\n    const title = ref('')\n    const description = ref('')\n    const file = ref(null)\n    const fileError = ref(null)\n    const isPending = ref(false)\n\n    const handleSubmit = async () => {\n      if (file.value) {\n        isPending.value = true\n        await uploadImage(file.value)\n        const res = await addDoc({\n          title: title.value,\n          description: description.value,\n          userId: user.value.uid,\n          userName: user.value.displayName,\n          coverUrl: url.value,\n          filePath: filePath.value,\n          createdAt: timestamp()\n        })\n        isPending.value = false\n        if (!error.value) {\n          router.push({ name: 'Home', params: { id: res.id }})\n        }\n      }\n    }\n\n    // allowed file types\n    const types = ['image/png', 'image/jpeg']\n\n    const handleChange = (e) => {\n      let selected = e.target.files[0]\n      console.log(selected)\n\n      if (selected && types.includes(selected.type)) {\n        file.value = selected\n        fileError.value = null\n      } else {\n        file.value = null\n        fileError.value = 'Please select an image file (png or jpg)'\n      }\n    }\n    \n    return { title, description, handleSubmit, fileError, handleChange, isPending }\n  }\n}\n</script>\n\n<style>\n  form {\n    background: white;\n  }\n  input[type=\"file\"] {\n    border: 0;\n    padding: 0;\n  }\n  label {\n    font-size: 12px;\n    display: block;\n    margin-top: 30px;\n  }\n  button {\n    margin-top: 20px;\n  }\n</style>"]}]}