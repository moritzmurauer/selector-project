{"remainingRequest":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/babel-loader/lib/index.js!/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/moritzmurauer/dev/ap/abschluss-pruefung/src/components/AddSong.vue?vue&type=template&id=91637f54&scoped=true","dependencies":[{"path":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/src/components/AddSong.vue","mtime":1616191004468},{"path":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgdk1vZGVsVGV4dCBhcyBfdk1vZGVsVGV4dCwgd2l0aERpcmVjdGl2ZXMgYXMgX3dpdGhEaXJlY3RpdmVzLCB3aXRoTW9kaWZpZXJzIGFzIF93aXRoTW9kaWZpZXJzLCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhJZCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoImRhdGEtdi05MTYzN2Y1NCIpOwoKX3B1c2hTY29wZUlkKCJkYXRhLXYtOTE2MzdmNTQiKTsKCnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAiYWRkLXNvbmciCn07Cgp2YXIgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImg0IiwgbnVsbCwgIkFkZCBhIE5ldyBTb25nIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzMgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJidXR0b24iLCBudWxsLCAiQWRkIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKX3BvcFNjb3BlSWQoKTsKCmV4cG9ydCB2YXIgcmVuZGVyID0gLyojX19QVVJFX18qL193aXRoSWQoZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMSwgWyEkc2V0dXAuc2hvd0Zvcm0gPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImJ1dHRvbiIsIHsKICAgIGtleTogMCwKICAgIG9uQ2xpY2s6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJHNldHVwLnNob3dGb3JtID0gdHJ1ZTsKICAgIH0pCiAgfSwgIkFkZCBTb25ncyIpKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKSwgJHNldHVwLnNob3dGb3JtID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJmb3JtIiwgewogICAga2V5OiAxLAogICAgb25TdWJtaXQ6IF9jYWNoZVs0XSB8fCAoX2NhY2hlWzRdID0gX3dpdGhNb2RpZmllcnMoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJHNldHVwLmhhbmRsZVN1Ym1pdC5hcHBseSgkc2V0dXAsIGFyZ3VtZW50cyk7CiAgICB9LCBbInByZXZlbnQiXSkpCiAgfSwgW19ob2lzdGVkXzIsIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoImlucHV0IiwgewogICAgdHlwZTogInRleHQiLAogICAgcGxhY2Vob2xkZXI6ICJTb25nIHRpdGxlIiwKICAgIHJlcXVpcmVkOiAiIiwKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzJdIHx8IChfY2FjaGVbMl0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkc2V0dXAudGl0bGUgPSAkZXZlbnQ7CiAgICB9KQogIH0sIG51bGwsIDUxMgogIC8qIE5FRURfUEFUQ0ggKi8KICApLCBbW192TW9kZWxUZXh0LCAkc2V0dXAudGl0bGVdXSksIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoImlucHV0IiwgewogICAgdHlwZTogInRleHQiLAogICAgcGxhY2Vob2xkZXI6ICJBcnRpc3QiLAogICAgcmVxdWlyZWQ6ICIiLAogICAgIm9uVXBkYXRlOm1vZGVsVmFsdWUiOiBfY2FjaGVbM10gfHwgKF9jYWNoZVszXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRzZXR1cC5hcnRpc3QgPSAkZXZlbnQ7CiAgICB9KQogIH0sIG51bGwsIDUxMgogIC8qIE5FRURfUEFUQ0ggKi8KICApLCBbW192TW9kZWxUZXh0LCAkc2V0dXAuYXJ0aXN0XV0pLCBfaG9pc3RlZF8zXSwgMzIKICAvKiBIWURSQVRFX0VWRU5UUyAqLwogICkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpXSk7Cn0pOw=="},{"version":3,"sources":["/Users/moritzmurauer/dev/ap/abschluss-pruefung/src/components/AddSong.vue"],"names":[],"mappings":";;;;;;;AACO,EAAA,KAAK,EAAC;;;8BAGP,YAAA,CAAuB,IAAvB,EAAuB,IAAvB,EAAI,gBAAJ,EAAkB,CAAA;AAAA;AAAlB,C;;8BAGA,YAAA,CAAoB,QAApB,EAAoB,IAApB,EAAQ,KAAR,EAAW,CAAA;AAAA;AAAX,C;;;;;uBANJ,YAAA,CAQM,KARN,EAAA,UAAA,EAQM,C,CAPW,MAAA,CAAA,Q,kBAAf,YAAA,CAAoE,QAApE,EAAoE;UAAA;AAA1C,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,MAAA,CAAA,QAAA,GAAQ,IAAV;AAAA,KAAA;AAAqC,GAApE,EAAkD,WAAlD,C,qCAOI,EANQ,MAAA,CAAA,Q,kBAAZ,YAAA,CAKO,MALP,EAKO;UAAA;AALgB,IAAA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,cAAA,CAAA;AAAA,aAAU,MAAA,CAAA,YAAA,OAAA,MAAA,YAAV;AAAA,KAAA,EAAsB,CAAA,SAAA,CAAtB,CAAA;AAKtB,GALP,E,CACE,U,kBACA,YAAA,CAAqE,OAArE,EAAqE;AAA9D,IAAA,IAAI,EAAC,MAAyD;AAAlD,IAAA,WAAW,EAAC,YAAsC;AAAzB,IAAA,QAAQ,EAAR,EAAyB;;aAAP,MAAA,CAAA,KAAA,GAAK,M;;AAAE,GAArE,E,IAAA,E;;AAAA,G,iBAA8D,MAAA,CAAA,K,qBAC9D,YAAA,CAAkE,OAAlE,EAAkE;AAA3D,IAAA,IAAI,EAAC,MAAsD;AAA/C,IAAA,WAAW,EAAC,QAAmC;AAA1B,IAAA,QAAQ,EAAR,EAA0B;;aAAR,MAAA,CAAA,MAAA,GAAM,M;;AAAE,GAAlE,E,IAAA,E;;AAAA,G,iBAA0D,MAAA,CAAA,M,KAC1D,U,CAJF,E;;AAAA,G,qCAMI,CARN,C","sourcesContent":["<template>\n  <div class=\"add-song\">\n    <button v-if=\"!showForm\" @click=\"showForm = true\">Add Songs</button>\n    <form v-if=\"showForm\" @submit.prevent=\"handleSubmit\">\n      <h4>Add a New Song</h4>\n      <input type=\"text\" placeholder=\"Song title\" required v-model=\"title\">\n      <input type=\"text\" placeholder=\"Artist\" required v-model=\"artist\">\n      <button>Add</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport useDocument from '../composables/useDocument'\n\nexport default {\n  props: ['playlist'],\n  setup(props) {\n    const title = ref('')\n    const artist = ref('')\n    const showForm = ref(false)\n    const { updateDoc } = useDocument('playlists', props.playlist.id)\n\n    const handleSubmit = async () => {\n      const newSong = {\n        title: title.value,\n        artist: artist.value,\n        id: Math.floor(Math.random() * 1000000)\n      }\n      const res = await updateDoc({\n        songs: [...props.playlist.songs, newSong]\n      })\n      title.value = ''\n      artist.value = ''\n    }\n\n    return { title, artist, showForm, handleSubmit }\n  }\n}\n</script>\n\n<style scoped>\n  .add-song {\n    text-align: center;\n    margin-top: 40px;\n  }\n  form {\n    max-width: 100%;\n    text-align: left;\n  }\n</style>"],"sourceRoot":""}]}