{"remainingRequest":"/Users/moritzmurauer/dev/selector/node_modules/babel-loader/lib/index.js!/Users/moritzmurauer/dev/selector/src/composables/useDocument.js","dependencies":[{"path":"/Users/moritzmurauer/dev/selector/src/composables/useDocument.js","mtime":1617292495031},{"path":"/Users/moritzmurauer/dev/selector/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/moritzmurauer/dev/selector/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL21vcml0em11cmF1ZXIvZGV2L3NlbGVjdG9yL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy/DhGhubGljaCB3aWUgVGhyaWxsc2Vla2VyIFByb2plY3QKaW1wb3J0IHsgcmVmIH0gZnJvbSAndnVlJzsKaW1wb3J0IHsgcHJvamVjdEZpcmVzdG9yZSB9IGZyb20gJy4uL2ZpcmViYXNlL2NvbmZpZyc7Cgp2YXIgdXNlRG9jdW1lbnQgPSBmdW5jdGlvbiB1c2VEb2N1bWVudChjb2xsZWN0aW9uLCBpZCkgewogIHZhciBlcnJvciA9IHJlZihudWxsKTsKICB2YXIgaXNQZW5kaW5nID0gcmVmKGZhbHNlKTsKICB2YXIgZG9jUmVmID0gcHJvamVjdEZpcmVzdG9yZS5jb2xsZWN0aW9uKGNvbGxlY3Rpb24pLmRvYyhpZCk7IC8vIGRlbGV0ZSBkb2N1bWVudCBmcm9tIGRhdGFiYXNlCgogIHZhciBkZWxldGVEb2MgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciByZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBpc1BlbmRpbmcudmFsdWUgPSB0cnVlOwogICAgICAgICAgICAgIGVycm9yLnZhbHVlID0gbnVsbDsKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gZG9jUmVmWyJkZWxldGUiXSgpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgaXNQZW5kaW5nLnZhbHVlID0gZmFsc2U7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVzKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEwOwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQudDAubWVzc2FnZSk7CiAgICAgICAgICAgICAgaXNQZW5kaW5nLnZhbHVlID0gZmFsc2U7CiAgICAgICAgICAgICAgZXJyb3IudmFsdWUgPSAnY291bGQgbm90IGRlbGV0ZSB0aGUgZG9jdW1lbnQnOwoKICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1syLCAxMF1dKTsKICAgIH0pKTsKCiAgICByZXR1cm4gZnVuY3Rpb24gZGVsZXRlRG9jKCkgewogICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfTsKICB9KCk7IC8vdXBkYXRlIGRvY3VtZW50IGZyb20gZGF0YWJhc2UKCgogIHZhciB1cGRhdGVEb2MgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMih1cGRhdGVzKSB7CiAgICAgIHZhciByZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgaXNQZW5kaW5nLnZhbHVlID0gdHJ1ZTsKICAgICAgICAgICAgICBlcnJvci52YWx1ZSA9IG51bGw7CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAyOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gZG9jUmVmLnVwZGF0ZSh1cGRhdGVzKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBpc1BlbmRpbmcudmFsdWUgPSBmYWxzZTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgcmVzKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxMDsKICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQyLnQwLm1lc3NhZ2UpOwogICAgICAgICAgICAgIGlzUGVuZGluZy52YWx1ZSA9IGZhbHNlOwogICAgICAgICAgICAgIGVycm9yLnZhbHVlID0gJ2NvdWxkIG5vdCB1cGRhdGUgdGhlIGRvY3VtZW50JzsKCiAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1syLCAxMF1dKTsKICAgIH0pKTsKCiAgICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlRG9jKF94KSB7CiAgICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfTsKICB9KCk7CgogIHJldHVybiB7CiAgICBlcnJvcjogZXJyb3IsCiAgICBpc1BlbmRpbmc6IGlzUGVuZGluZywKICAgIGRlbGV0ZURvYzogZGVsZXRlRG9jLAogICAgdXBkYXRlRG9jOiB1cGRhdGVEb2MKICB9Owp9OwoKZXhwb3J0IGRlZmF1bHQgdXNlRG9jdW1lbnQ7"},{"version":3,"sources":["/Users/moritzmurauer/dev/selector/src/composables/useDocument.js"],"names":["ref","projectFirestore","useDocument","collection","id","error","isPending","docRef","doc","deleteDoc","value","res","console","log","message","updateDoc","updates","update"],"mappings":";;AAAA;AAEA,SAASA,GAAT,QAAoB,KAApB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,UAAD,EAAaC,EAAb,EAAoB;AAEtC,MAAIC,KAAK,GAAGL,GAAG,CAAC,IAAD,CAAf;AACA,MAAIM,SAAS,GAAGN,GAAG,CAAC,KAAD,CAAnB;AACA,MAAIO,MAAM,GAAGN,gBAAgB,CAACE,UAAjB,CAA4BA,UAA5B,EAAwCK,GAAxC,CAA4CJ,EAA5C,CAAb,CAJsC,CAMtC;;AACA,MAAMK,SAAS;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBH,cAAAA,SAAS,CAACI,KAAV,GAAkB,IAAlB;AACAL,cAAAA,KAAK,CAACK,KAAN,GAAc,IAAd;AAFgB;AAAA;AAAA,qBAKIH,MAAM,UAAN,EALJ;;AAAA;AAKRI,cAAAA,GALQ;AAMdL,cAAAA,SAAS,CAACI,KAAV,GAAkB,KAAlB;AANc,+CAOPC,GAPO;;AAAA;AAAA;AAAA;AAUdC,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAIC,OAAhB;AACAR,cAAAA,SAAS,CAACI,KAAV,GAAkB,KAAlB;AACAL,cAAAA,KAAK,CAACK,KAAN,GAAc,+BAAd;;AAZc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATD,SAAS;AAAA;AAAA;AAAA,KAAf,CAPsC,CAuBtC;;;AACA,MAAMM,SAAS;AAAA,wEAAG,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBV,cAAAA,SAAS,CAACI,KAAV,GAAkB,IAAlB;AACAL,cAAAA,KAAK,CAACK,KAAN,GAAc,IAAd;AAFgB;AAAA;AAAA,qBAKIH,MAAM,CAACU,MAAP,CAAcD,OAAd,CALJ;;AAAA;AAKRL,cAAAA,GALQ;AAMdL,cAAAA,SAAS,CAACI,KAAV,GAAkB,KAAlB;AANc,gDAOPC,GAPO;;AAAA;AAAA;AAAA;AAUdC,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAIC,OAAhB;AACAR,cAAAA,SAAS,CAACI,KAAV,GAAkB,KAAlB;AACAL,cAAAA,KAAK,CAACK,KAAN,GAAc,+BAAd;;AAZc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATK,SAAS;AAAA;AAAA;AAAA,KAAf;;AAgBA,SAAO;AAAEV,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,SAAS,EAATA,SAAT;AAAoBG,IAAAA,SAAS,EAATA,SAApB;AAA+BM,IAAAA,SAAS,EAATA;AAA/B,GAAP;AAED,CA1CD;;AA4CA,eAAeb,WAAf","sourcesContent":["//Ã„hnlich wie Thrillseeker Project\n\nimport { ref } from 'vue'\nimport { projectFirestore } from '../firebase/config'\n\nconst useDocument = (collection, id) => {\n\n  let error = ref(null)\n  let isPending = ref(false)\n  let docRef = projectFirestore.collection(collection).doc(id)\n\n  // delete document from database\n  const deleteDoc = async () => {\n    isPending.value = true\n    error.value = null\n\n    try {\n      const res = await docRef.delete()\n      isPending.value = false\n      return res\n    }\n    catch(err) {\n      console.log(err.message)\n      isPending.value = false\n      error.value = 'could not delete the document'\n    }\n  }\n\n  //update document from database\n  const updateDoc = async (updates) => {\n    isPending.value = true\n    error.value = null\n\n    try {\n      const res = await docRef.update(updates)\n      isPending.value = false\n      return res\n    }\n    catch(err) {\n      console.log(err.message)\n      isPending.value = false\n      error.value = 'could not update the document'\n    }\n  }\n\n  return { error, isPending, deleteDoc, updateDoc }\n\n}\n\nexport default useDocument"]}]}