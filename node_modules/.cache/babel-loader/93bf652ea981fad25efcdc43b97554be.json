{"remainingRequest":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/babel-loader/lib/index.js!/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/moritzmurauer/dev/ap/abschluss-pruefung/src/views/posts/CreatePost.vue?vue&type=template&id=3f8e7fb2","dependencies":[{"path":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/src/views/posts/CreatePost.vue","mtime":1617292598743},{"path":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/moritzmurauer/dev/ap/abschluss-pruefung/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgdk1vZGVsVGV4dCBhcyBfdk1vZGVsVGV4dCwgd2l0aERpcmVjdGl2ZXMgYXMgX3dpdGhEaXJlY3RpdmVzLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgd2l0aE1vZGlmaWVycyBhcyBfd2l0aE1vZGlmaWVycywgRnJhZ21lbnQgYXMgX0ZyYWdtZW50IH0gZnJvbSAidnVlIjsKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJiYWNrZ3JvdW5kLWNyZWF0ZSIKfTsKCnZhciBfaG9pc3RlZF8yID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiaDQiLCBudWxsLCAiQ3JlYXRlIGEgTmV3IFBvc3QiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImxhYmVsIiwgbnVsbCwgIlVwbG9hZCBQb3N0IENvdmVyIEltYWdlIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzQgPSB7CiAgY2xhc3M6ICJlcnJvciIKfTsKdmFyIF9ob2lzdGVkXzUgPSB7CiAga2V5OiAwCn07CnZhciBfaG9pc3RlZF82ID0gewogIGtleTogMSwKICBkaXNhYmxlZDogIiIKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9OYXZiYXIgPSBfcmVzb2x2ZUNvbXBvbmVudCgiTmF2YmFyIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9OYXZiYXIpLCBfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzEsIFtfY3JlYXRlVk5vZGUoImZvcm0iLCB7CiAgICBvblN1Ym1pdDogX2NhY2hlWzRdIHx8IChfY2FjaGVbNF0gPSBfd2l0aE1vZGlmaWVycyhmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkc2V0dXAuaGFuZGxlU3VibWl0LmFwcGx5KCRzZXR1cCwgYXJndW1lbnRzKTsKICAgIH0sIFsicHJldmVudCJdKSkKICB9LCBbX2hvaXN0ZWRfMiwgX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIHRleHQgaW5mb3JtYXRpb24gIiksIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoImlucHV0IiwgewogICAgdHlwZTogInRleHQiLAogICAgcmVxdWlyZWQ6ICIiLAogICAgcGxhY2Vob2xkZXI6ICJQb3N0IHRpdGxlIiwKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkc2V0dXAudGl0bGUgPSAkZXZlbnQ7CiAgICB9KQogIH0sIG51bGwsIDUxMgogIC8qIE5FRURfUEFUQ0ggKi8KICApLCBbW192TW9kZWxUZXh0LCAkc2V0dXAudGl0bGVdXSksIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoInRleHRhcmVhIiwgewogICAgcmVxdWlyZWQ6ICIiLAogICAgcGxhY2Vob2xkZXI6ICJQb3N0IGRlc2NyaXB0aW9uLi4uIiwKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzJdIHx8IChfY2FjaGVbMl0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkc2V0dXAuZGVzY3JpcHRpb24gPSAkZXZlbnQ7CiAgICB9KQogIH0sIG51bGwsIDUxMgogIC8qIE5FRURfUEFUQ0ggKi8KICApLCBbW192TW9kZWxUZXh0LCAkc2V0dXAuZGVzY3JpcHRpb25dXSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiB1cGxvYWQgUG9zdCBpbWFnZSAiKSwgX2hvaXN0ZWRfMywgX2NyZWF0ZVZOb2RlKCJpbnB1dCIsIHsKICAgIHR5cGU6ICJmaWxlIiwKICAgIG9uQ2hhbmdlOiBfY2FjaGVbM10gfHwgKF9jYWNoZVszXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRzZXR1cC5oYW5kbGVDaGFuZ2UuYXBwbHkoJHNldHVwLCBhcmd1bWVudHMpOwogICAgfSkKICB9LCBudWxsLCAzMgogIC8qIEhZRFJBVEVfRVZFTlRTICovCiAgKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF80LCBfdG9EaXNwbGF5U3RyaW5nKCRzZXR1cC5maWxlRXJyb3IpLCAxCiAgLyogVEVYVCAqLwogICksICEkc2V0dXAuaXNQZW5kaW5nID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJidXR0b24iLCBfaG9pc3RlZF81LCAiUG9zdCIpKSA6IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiYnV0dG9uIiwgX2hvaXN0ZWRfNiwgIlNhdmluZy4uLiIpKV0sIDMyCiAgLyogSFlEUkFURV9FVkVOVFMgKi8KICApXSldLCA2NAogIC8qIFNUQUJMRV9GUkFHTUVOVCAqLwogICk7Cn0="},{"version":3,"sources":["/Users/moritzmurauer/dev/ap/abschluss-pruefung/src/views/posts/CreatePost.vue"],"names":[],"mappings":";;;;AAEO,EAAA,KAAK,EAAC;;;8BAEP,YAAA,CAA0B,IAA1B,EAA0B,IAA1B,EAAI,mBAAJ,EAAqB,CAAA;AAAA;AAArB,C;;8BAMA,YAAA,CAAsC,OAAtC,EAAsC,IAAtC,EAAO,yBAAP,EAA8B,CAAA;AAAA;AAA9B,C;;;AAEK,EAAA,KAAK,EAAC;;;;;;;AAGI,EAAA,QAAQ,EAAR;;;;;sDAdnB,YAAA,CAAU,iBAAV,C,EACA,YAAA,CAeM,KAfN,EAAA,UAAA,EAeM,CAdJ,YAAA,CAaO,MAbP,EAaO;AAbA,IAAA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,cAAA,CAAA;AAAA,aAAU,MAAA,CAAA,YAAA,OAAA,MAAA,YAAV;AAAA,KAAA,EAAsB,CAAA,SAAA,CAAtB,CAAA;AAaN,GAbP,E,CACE,U,EAEA,mBAAA,CAAA,oBAAA,C,kBACA,YAAA,CAAqE,OAArE,EAAqE;AAA9D,IAAA,IAAI,EAAC,MAAyD;AAAlD,IAAA,QAAQ,EAAR,EAAkD;AAAzC,IAAA,WAAW,EAAC,YAA6B;;aAAP,MAAA,CAAA,KAAA,GAAK,M;;AAAE,GAArE,E,IAAA,E;;AAAA,G,iBAA8D,MAAA,CAAA,K,qBAC9D,YAAA,CAAsF,UAAtF,EAAsF;AAA5E,IAAA,QAAQ,EAAR,EAA4E;AAAnE,IAAA,WAAW,EAAC,qBAAuD;;aAAxB,MAAA,CAAA,WAAA,GAAW,M;;AAAa,GAAtF,E,IAAA,E;;AAAA,G,iBAA8D,MAAA,CAAA,W,KAC9D,mBAAA,CAAA,qBAAA,C,EACA,U,EACA,YAAA,CAA0C,OAA1C,EAA0C;AAAnC,IAAA,IAAI,EAAC,MAA8B;AAAtB,IAAA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,MAAA,CAAA,YAAA,OAAA,MAAA,YAAF;AAAA,KAAA;AAAgB,GAA1C,E,IAAA,E;;AAAA,G,EACA,YAAA,CAAwC,KAAxC,EAAA,UAAA,EAAwC,gBAAA,CAAlB,MAAA,CAAA,SAAkB,CAAxC,EAA+B;AAAA;AAA/B,G,GAEe,MAAA,CAAA,S,kBAAf,YAAA,CAAuC,QAAvC,EAAuC,UAAvC,EAA0B,MAA1B,C,mBACA,YAAA,CAA0C,QAA1C,EAAA,UAAA,EAAwB,WAAxB,C,EAZF,E;;AAAA,GAcI,CAfN,C","sourcesContent":["<template>\n  <Navbar />\n  <div class=\"background-create\">\n    <form @submit.prevent=\"handleSubmit\">\n      <h4>Create a New Post</h4>\n\n      <!-- text information -->\n      <input type=\"text\" required placeholder=\"Post title\" v-model=\"title\">\n      <textarea required placeholder=\"Post description...\" v-model=\"description\"></textarea>\n      <!-- upload Post image -->\n      <label>Upload Post Cover Image</label>\n      <input type=\"file\" @change=\"handleChange\">\n      <div class=\"error\">{{ fileError }}</div>\n\n      <button v-if=\"!isPending\">Post</button>\n      <button v-else disabled>Saving...</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport Navbar from '@/components/Navbar.vue'\nimport useStorage from '@/composables/useStorage'\nimport useCollection from '@/composables/useCollection'\nimport getUser from '@/composables/getUser'\nimport { timestamp } from '@/firebase/config'\nimport { useRouter } from 'vue-router'\n\nexport default {\n  components: {Navbar},\n  setup() {\n    const { filePath, url, uploadImage } = useStorage()\n    const { error, addDoc } = useCollection('posts')\n    const { user } = getUser()\n    const router = useRouter()\n\n    const title = ref('')\n    const description = ref('')\n    const file = ref(null)\n    const fileError = ref(null)\n    const isPending = ref(false)\n\n  // post gets created with information from form\n    const handleSubmit = async () => {\n      if (file.value) {\n        isPending.value = true\n        await uploadImage(file.value)\n        const res = await addDoc({\n          title: title.value,\n          description: description.value,\n          userId: user.value.uid,\n          userName: user.value.displayName,\n          coverUrl: url.value,\n          filePath: filePath.value,\n          createdAt: timestamp()\n        })\n        isPending.value = false\n        if (!error.value) {\n          router.push({ name: 'Home', params: { id: res.id }})\n        }\n      }\n    }\n\n    // allowed file types\n    const types = ['image/png', 'image/jpeg']\n\n    const handleChange = (e) => {\n      let selected = e.target.files[0]\n      console.log(selected)\n\n      if (selected && types.includes(selected.type)) {\n        file.value = selected\n        fileError.value = null\n      } else {\n        file.value = null\n        fileError.value = 'Please select an image file (png or jpg)'\n      }\n    }\n    \n    return { title, description, handleSubmit, fileError, handleChange, isPending }\n  }\n}\n</script>\n\n<style>\n  form {\n    background: white;\n  }\n  input[type=\"file\"] {\n    border: 0;\n    padding: 0;\n  }\n\n\n  textarea {\n    height: 200px;\n  }\n\n\n  label {\n    font-size: 12px;\n    display: block;\n    margin-top: 30px;\n  }\n  button {\n    margin-top: 20px;\n  }\n</style>"],"sourceRoot":""}]}