{"remainingRequest":"/Users/moritzmurauer/dev/selector/node_modules/babel-loader/lib/index.js!/Users/moritzmurauer/dev/selector/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/moritzmurauer/dev/selector/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/moritzmurauer/dev/selector/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/moritzmurauer/dev/selector/src/views/posts/CreatePost.vue?vue&type=template&id=3f8e7fb2","dependencies":[{"path":"/Users/moritzmurauer/dev/selector/src/views/posts/CreatePost.vue","mtime":1672979135902},{"path":"/Users/moritzmurauer/dev/selector/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/moritzmurauer/dev/selector/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/moritzmurauer/dev/selector/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/moritzmurauer/dev/selector/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/moritzmurauer/dev/selector/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgdk1vZGVsVGV4dCBhcyBfdk1vZGVsVGV4dCwgd2l0aERpcmVjdGl2ZXMgYXMgX3dpdGhEaXJlY3RpdmVzLCByZW5kZXJMaXN0IGFzIF9yZW5kZXJMaXN0LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCB2TW9kZWxTZWxlY3QgYXMgX3ZNb2RlbFNlbGVjdCwgd2l0aE1vZGlmaWVycyBhcyBfd2l0aE1vZGlmaWVycyB9IGZyb20gInZ1ZSI7CnZhciBfaG9pc3RlZF8xID0gewogICJjbGFzcyI6ICJiYWNrZ3JvdW5kLWNyZWF0ZSBtdC0xNiIKfTsKCnZhciBfaG9pc3RlZF8yID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiaDQiLCBudWxsLCAiQ3JlYXRlIGEgTmV3IFBvc3QiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMyA9IHsKICAiY2xhc3MiOiAiZmllbGQgbXQtMiBtYi0yIgp9OwoKdmFyIF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJoNCIsIG51bGwsICJQbGVhc2Ugc2VsZWN0IGEgY2F0ZWdvcnkiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfNSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoIm9wdGlvbiIsIHsKICB2YWx1ZTogIiIsCiAgZGlzYWJsZWQ6ICIiLAogIHNlbGVjdGVkOiAiIgp9LCAiU2VsZWN0IHlvdXIgb3B0aW9uIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzYgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJsYWJlbCIsIG51bGwsICJVcGxvYWQgUG9zdCBDb3ZlciBJbWFnZSIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF83ID0gewogICJjbGFzcyI6ICJlcnJvciIKfTsKdmFyIF9ob2lzdGVkXzggPSB7CiAga2V5OiAwCn07CnZhciBfaG9pc3RlZF85ID0gewogIGtleTogMSwKICBkaXNhYmxlZDogIiIKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfY3JlYXRlVk5vZGUoImZvcm0iLCB7CiAgICBvblN1Ym1pdDogX2NhY2hlWzVdIHx8IChfY2FjaGVbNV0gPSBfd2l0aE1vZGlmaWVycyhmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkc2V0dXAuaGFuZGxlU3VibWl0LmFwcGx5KCRzZXR1cCwgYXJndW1lbnRzKTsKICAgIH0sIFsicHJldmVudCJdKSkKICB9LCBbX2hvaXN0ZWRfMiwgX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIHRleHQgaW5mb3JtYXRpb24gIiksIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoImlucHV0IiwgewogICAgdHlwZTogInRleHQiLAogICAgcmVxdWlyZWQ6ICIiLAogICAgcGxhY2Vob2xkZXI6ICJQb3N0IHRpdGxlIiwKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkc2V0dXAudGl0bGUgPSAkZXZlbnQ7CiAgICB9KQogIH0sIG51bGwsIDUxMgogIC8qIE5FRURfUEFUQ0ggKi8KICApLCBbW192TW9kZWxUZXh0LCAkc2V0dXAudGl0bGVdXSksIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoInRleHRhcmVhIiwgewogICAgcmVxdWlyZWQ6ICIiLAogICAgcGxhY2Vob2xkZXI6ICJQb3N0IGRlc2NyaXB0aW9uLi4uIiwKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzJdIHx8IChfY2FjaGVbMl0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkc2V0dXAuZGVzY3JpcHRpb24gPSAkZXZlbnQ7CiAgICB9KQogIH0sIG51bGwsIDUxMgogIC8qIE5FRURfUEFUQ0ggKi8KICApLCBbW192TW9kZWxUZXh0LCAkc2V0dXAuZGVzY3JpcHRpb25dXSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiBzZWxlY3QgY2F0ZWdvcnkgIiksIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMywgW19ob2lzdGVkXzQsIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoInNlbGVjdCIsIHsKICAgICJjbGFzcyI6ICJtYi0xIG10LTEgcGwtMyBwLTMgcHQtMSBwYi0xIiwKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzNdIHx8IChfY2FjaGVbM10gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkc2V0dXAuc2VsZWN0ZWQgPSAkZXZlbnQ7CiAgICB9KQogIH0sIFtfaG9pc3RlZF81LCAoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJHNldHVwLm9wdGlvbnMsIGZ1bmN0aW9uIChvcHRpb24pIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygib3B0aW9uIiwgewogICAgICBzZWxlY3RlZDogImNhdGVnb3J5PyIsCiAgICAgICJjbGFzcyI6ICJwLTMiLAogICAgICBrZXk6IG9wdGlvbi52YWx1ZQogICAgfSwgX3RvRGlzcGxheVN0cmluZyhvcHRpb24udGV4dCksIDEKICAgIC8qIFRFWFQgKi8KICAgICk7CiAgfSksIDEyOAogIC8qIEtFWUVEX0ZSQUdNRU5UICovCiAgKSldLCA1MTIKICAvKiBORUVEX1BBVENIICovCiAgKSwgW1tfdk1vZGVsU2VsZWN0LCAkc2V0dXAuc2VsZWN0ZWRdXSksIF9jcmVhdGVWTm9kZSgicCIsIG51bGwsICJDYXRlZ29yeTogIiArIF90b0Rpc3BsYXlTdHJpbmcoJHNldHVwLnNlbGVjdGVkKSwgMQogIC8qIFRFWFQgKi8KICApXSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiB1cGxvYWQgUG9zdCBpbWFnZSAiKSwgX2hvaXN0ZWRfNiwgX2NyZWF0ZVZOb2RlKCJpbnB1dCIsIHsKICAgIHR5cGU6ICJmaWxlIiwKICAgIG9uQ2hhbmdlOiBfY2FjaGVbNF0gfHwgKF9jYWNoZVs0XSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRzZXR1cC5oYW5kbGVDaGFuZ2UuYXBwbHkoJHNldHVwLCBhcmd1bWVudHMpOwogICAgfSkKICB9LCBudWxsLCAzMgogIC8qIEhZRFJBVEVfRVZFTlRTICovCiAgKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF83LCBfdG9EaXNwbGF5U3RyaW5nKCRzZXR1cC5maWxlRXJyb3IpLCAxCiAgLyogVEVYVCAqLwogICksICEkc2V0dXAuaXNQZW5kaW5nID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJidXR0b24iLCBfaG9pc3RlZF84LCAiUG9zdCIpKSA6IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiYnV0dG9uIiwgX2hvaXN0ZWRfOSwgIlNhdmluZy4uLiIpKV0sIDMyCiAgLyogSFlEUkFURV9FVkVOVFMgKi8KICApXSk7Cn0="},{"version":3,"sources":["/Users/moritzmurauer/dev/selector/src/views/posts/CreatePost.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"background-create mt-16\">\n    <form @submit.prevent=\"handleSubmit\">\n      <h4>Create a New Post</h4>\n\n      <!-- text information -->\n      <input type=\"text\" required placeholder=\"Post title\" v-model=\"title\" />\n      <textarea\n        required\n        placeholder=\"Post description...\"\n        v-model=\"description\"\n      ></textarea>\n\n      <!-- select category -->\n      <div class=\"field mt-2 mb-2\">\n        <h4>Please select a category</h4>\n        <select class=\"mb-1 mt-1 pl-3 p-3 pt-1 pb-1\" v-model=\"selected\">\n          <option value=\"\" disabled selected>Select your option</option>\n          <option\n            selected=\"category?\"\n            class=\"p-3\"\n            v-for=\"option in options\"\n            :key=\"option.value\"\n            >{{ option.text }}\n          </option>\n        </select>\n        <p>Category: {{ selected }}</p>\n      </div>\n\n      <!-- upload Post image -->\n      <label>Upload Post Cover Image</label>\n      <input type=\"file\" @change=\"handleChange\" />\n      <div class=\"error\">{{ fileError }}</div>\n\n      <button v-if=\"!isPending\">Post</button>\n      <button v-else disabled>Saving...</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport useStorage from \"@/composables/useStorage\";\nimport useCollection from \"@/composables/useCollection\";\nimport getUser from \"@/composables/getUser\";\nimport { timestamp } from \"@/firebase/config\";\nimport { useRouter } from \"vue-router\";\n\nexport default {\n  setup() {\n    const { filePath, url, uploadImage } = useStorage();\n    const { error, addDoc } = useCollection(\"posts\");\n    const { user } = getUser();\n    const router = useRouter();\n\n    const title = ref(\"\");\n    const description = ref(\"\");\n    const file = ref(null);\n    const fileError = ref(null);\n    const isPending = ref(false);\n\n    // post gets created with information from form\n    const handleSubmit = async () => {\n      if (file.value) {\n        isPending.value = true;\n        await uploadImage(file.value);\n        const res = await addDoc({\n          title: title.value,\n          description: description.value,\n          userId: user.value.uid,\n          userName: user.value.displayName,\n          category: selected.value,\n          coverUrl: url.value,\n          filePath: filePath.value,\n          createdAt: timestamp(),\n        });\n        isPending.value = false;\n        if (!error.value) {\n          router.push({ name: \"Artworks\", params: { id: res.id } });\n        }\n      }\n    };\n\n    // Defines possible Category Inputs\n    const options = ref([\n      { text: \"Photography\", value: \"A\" },\n      { text: \"Illustration\", value: \"B\" },\n      { text: \"Drawing\", value: \"C\" },\n    ]);\n\n    const selected = ref(\"\");\n\n    // allowed file types\n    const types = [\"image/png\", \"image/jpeg\"];\n\n    // image upload\n    const handleChange = (e) => {\n      let selected = e.target.files[0];\n      console.log(selected);\n\n      if (selected && types.includes(selected.type)) {\n        file.value = selected;\n        fileError.value = null;\n      } else {\n        file.value = null;\n        fileError.value = \"Please select an image file (png or jpg)\";\n      }\n    };\n\n    return {\n      title,\n      description,\n      handleSubmit,\n      fileError,\n      handleChange,\n      isPending,\n      options,\n      selected,\n    };\n  },\n};\n</script>\n\n<style>\nform {\n  background: white;\n}\ninput[type=\"file\"] {\n  border: 0;\n  padding: 0;\n}\n\ntextarea {\n  height: 200px;\n}\n\nlabel {\n  font-size: 12px;\n  display: block;\n  margin-top: 30px;\n}\nbutton {\n  margin-top: 20px;\n}\n</style>\n"],"sourceRoot":""}]}